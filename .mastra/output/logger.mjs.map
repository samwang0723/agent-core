{"version":3,"file":"logger.mjs","sources":["../../src/mastra/utils/logger.ts"],"sourcesContent":["import { IMastraLogger, LoggerTransport, LogLevel } from '@mastra/core/logger';\nimport winston from 'winston';\n\nconst winstonLogger = winston.createLogger({\n  level: process.env.LOG_LEVEL || 'info',\n  format: winston.format.combine(\n    winston.format.timestamp(),\n    winston.format.printf(({ timestamp, level, message, ...rest }) => {\n      const args = Object.keys(rest).length\n        ? JSON.stringify(rest, null, 2)\n        : '';\n      return `${timestamp} ${level}: ${message} ${args}`;\n    }),\n  ),\n  transports: [\n    new winston.transports.Console({\n      format: winston.format.combine(\n        winston.format.colorize(),\n        winston.format.printf(({ timestamp, level, message, ...rest }) => {\n          let args = '';\n          if (typeof message === 'object') {\n            args = JSON.stringify(message, null, 2);\n            message = '';\n          }\n          const extraArgs = Object.keys(rest).length\n            ? JSON.stringify(rest, null, 2)\n            : '';\n          return `${timestamp} ${level}: ${message} ${args} ${extraArgs}`.trim();\n        }),\n      ),\n    }),\n    new winston.transports.File({ filename: 'error.log', level: 'error' }),\n    new winston.transports.File({ filename: 'combined.log' }),\n  ],\n});\n\nconst logger: IMastraLogger = {\n  info: (message: string, ...args: any[]) =>\n    winstonLogger.info(message, ...args),\n  warn: (message: string, ...args: any[]) =>\n    winstonLogger.warn(message, ...args),\n  error: (message: string | Error, ...args: any[]) => {\n    if (message instanceof Error) {\n      winstonLogger.error(message.message, message, ...args);\n    } else {\n      winstonLogger.error(message, ...args);\n    }\n  },\n  debug: (message: string, ...args: any[]) =>\n    winstonLogger.debug(message, ...args),\n  getTransports: (): Map<string, LoggerTransport> => {\n    return new Map<string, LoggerTransport>();\n  },\n  trackException: (error: {\n    originalError?: Error;\n    message: string;\n    properties?: { [key: string]: any };\n    measurements?: { [key: string]: number };\n  }) => {\n    const err = error.originalError || new Error(error.message);\n    winstonLogger.error(err.message, {\n      stack: err.stack,\n      properties: error.properties,\n      measurements: error.measurements,\n    });\n  },\n  getLogs: async (\n    transportId: string,\n    params?: {\n      fromDate?: Date;\n      toDate?: Date;\n      logLevel?: LogLevel;\n      filters?: Record<string, any>;\n      page?: number;\n      perPage?: number;\n    },\n  ): Promise<{\n    logs: any[];\n    total: number;\n    page: number;\n    perPage: number;\n    hasMore: boolean;\n  }> => {\n    console.log(\n      `Getting logs for transport: ${transportId} with params:`,\n      params,\n    );\n    return {\n      logs: [],\n      total: 0,\n      page: params?.page || 1,\n      perPage: params?.perPage || 10,\n      hasMore: false,\n    };\n  },\n  getLogsByRunId: async (args: {\n    transportId: string;\n    runId: string;\n    fromDate?: Date;\n    toDate?: Date;\n    logLevel?: LogLevel;\n    filters?: Record<string, any>;\n    page?: number;\n    perPage?: number;\n  }): Promise<{\n    logs: any[];\n    total: number;\n    page: number;\n    perPage: number;\n    hasMore: boolean;\n  }> => {\n    console.log(`Getting logs for runId: ${args.runId} with params:`, args);\n    return {\n      logs: [],\n      total: 0,\n      page: args.page || 1,\n      perPage: args.perPage || 10,\n      hasMore: false,\n    };\n  },\n};\n\nexport default logger;\n"],"names":[],"mappings":"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"}